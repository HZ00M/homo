<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-parent</artifactId>
        <version>2.7.2</version>
        <relativePath/>
    </parent>

    <modules>
        <module>homo-core-system</module>
        <module>homo-core-utils</module>
        <module>homo-core-proto</module>
        <module>homo-core-test</module>
        <module>homo-core-facade</module>
        <module>homo-core-properties</module>
        <module>homo-service-entity-storage-mongo</module>
        <module>homo-service-lock-redis</module>
        <module>homo-core-redis-base</module>
        <module>homo-service-cache-storage-redis</module>
        <module>homo-service-persistence-storage-redis-mysql</module>
        <module>homo-core-mysql-base</module>
        <module>homo-service-storage-dirty</module>
        <module>homo-service-mysql-landing</module>
        <module>homo-core-rpc-server</module>
        <module>homo-core-rpc-client</module>
        <module>homo-core-rpc-base</module>
        <module>homo-core-rpc-grpc</module>
        <module>homo-service-stateful-driver-redis</module>
        <module>homo-core-rpc-http</module>
        <module>homo-core-gate-tcp</module>
        <module>homo-core-gate</module>
        <module>homo-service-tread</module>
        <module>homo-core-ability-base</module>
        <module>homo-core-storage</module>
        <module>homo-maven-plugin</module>
        <module>homo-core-extend-utils</module>
        <module>homo-core-mq-consumer</module>
        <module>homo-core-mq-producer</module>
        <module>homo-core-mq-base</module>
        <module>homo-core-mq-driver-kafka</module>
    </modules>

    <groupId>com.homo</groupId>
    <artifactId>homo-core</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <properties>
        <revision>1.0.0.39-SNAPSHOT</revision>
        <spring.boot.version>2.3.12.RELEASE</spring.boot.version>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
        <maven.assembly.version>2.6</maven.assembly.version>
        <caffeine.version>2.9.3</caffeine.version>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <lombok.version>1.18.4</lombok.version>
        <os-maven-plugin.version>1.6.2</os-maven-plugin.version>
        <protobuf-parent.version>3.11.0</protobuf-parent.version>
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
        <protoc.version>3.7.0</protoc.version>
        <log4j.version>2.7</log4j.version>
        <guava.version>21.0</guava.version>
        <apollo.version>1.2.0</apollo.version>
        <mybatis-spring.version>1.3.1</mybatis-spring.version>
        <brave.version>5.13.3</brave.version>
        <zipkin.reporter2.version>2.16.3</zipkin.reporter2.version>
        <jackson.version>2.13.3</jackson.version>
        <fastjson.version>1.2.76</fastjson.version>
        <fst.version>2.57</fst.version>
        <!--        frame       -->
        <jboss.resteasy.version>3.11.4.Final</jboss.resteasy.version>
        <mapstruct.version>1.1.0.Final</mapstruct.version>
        <grpc.version>1.29.0</grpc.version>
        <okhttp.version>4.9.1</okhttp.version>
        <reflections.version>0.10.1</reflections.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <dubbo.version>2.6.1</dubbo.version>
        <jedis.version>2.9.0</jedis.version>
        <druid.version>1.0.31</druid.version>
        <netty.all.version>4.1.68.Final</netty.all.version>
        <apache.commons.version>3.5</apache.commons.version>
        <apache.commons.collections4.version>4.4</apache.commons.collections4.version>
        <commons-pool2.version>2.10.0</commons-pool2.version>
        <hibernate-validator.version>6.2.0.Final</hibernate-validator.version>
        <skywalking.version>8.3.0</skywalking.version>
        <lettuce.version>6.1.3.RELEASE</lettuce.version>
        <protostuff.version>1.5.9</protostuff.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quartz.version>2.2.3</quartz.version>
        <dropwizard.metrics.version>3.2.2</dropwizard.metrics.version>
        <jetlang.version>0.2.9</jetlang.version>
        <jodis.version>0.4.1</jodis.version>
        <mybatis.starter.version>1.3.2</mybatis.starter.version>
        <mybatis.spring.version>1.3.1</mybatis.spring.version>
        <docker.version>3.2.7</docker.version>
        <maven.version>3.3.9</maven.version>
        <maven.plugin.annotations.version>3.8.1</maven.plugin.annotations.version>
        <k8s.version>10.0.0</k8s.version>
        <apache.kafka.version>3.2.1</apache.kafka.version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>22.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ctrip.framework.apollo</groupId>
            <artifactId>apollo-client</artifactId>
            <version>1.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!--            工程依赖  子类主动引入           -->
            <dependency>
                <artifactId>homo-core-system</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-ability-base</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-mq-base</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-mq-consumer</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-mq-producer</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-mq-driver-kafka</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <artifactId>homo-core-storage</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-utils</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-extend-utils</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-facade</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-service-tread</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-proto</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-gate-tcp</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-gate</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-rpc-grpc</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-service-stateful-driver-redis</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-properties</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-utils</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-test</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-service-entity-storage-mongo</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-redis-base</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-service-lock-redis</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-service-cache-storage-redis</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-service-persistence-storage-redis-mysql</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-mysql-base</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-service-storage-dirty</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-service-mysql-landing</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-service-base</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-rpc-base</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <artifactId>homo-core-rpc-client</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-rpc-server</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-core-rpc-http</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <artifactId>homo-maven-plugin</artifactId>
                <groupId>com.homo</groupId>
                <version>${revision}</version>
            </dependency>


            <!--            第三方依赖             -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-parent</artifactId>
                <version>${protobuf-parent.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-core</artifactId>
                <version>${protostuff.version}</version>
            </dependency>

            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-runtime</artifactId>
                <version>${protostuff.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-hadoop</artifactId>
                <version>2.5.0.RELEASE</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.all.version}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-services</artifactId>
                <version>${grpc.version}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty-shaded</artifactId>
                <version>${grpc.version}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>


            <!--            <dependency>-->
            <!--                <groupId>com.google.protobuf</groupId>-->
            <!--                <artifactId>protobuf-java-util</artifactId>-->
            <!--                <version>${protobuf.version}</version>-->
            <!--            </dependency>-->

            <dependency>
                <groupId>io.zipkin.brave</groupId>
                <artifactId>brave-bom</artifactId>
                <version>${brave.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.zipkin.reporter2</groupId>
                <artifactId>zipkin-sender-okhttp3</artifactId>
                <version>${zipkin.reporter2.version}</version>
            </dependency>


            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-netty4</artifactId>
                <version>${jboss.resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>2.0.1.Final</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.jboss.resteasy/jaxrs-api -->
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>jaxrs-api</artifactId>
                <version>3.0.12.Final</version>
            </dependency>
            <dependency>
                <groupId>io.codis.jodis</groupId>
                <artifactId>jodis</artifactId>
                <version>${jodis.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxrs</artifactId>
                <version>${jboss.resteasy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-client</artifactId>
                <version>${jboss.resteasy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxb-provider</artifactId>
                <version>${jboss.resteasy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jackson-provider</artifactId>
                <version>${jboss.resteasy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jackson2-provider</artifactId>
                <version>${jboss.resteasy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-multipart-provider</artifactId>
                <version>${jboss.resteasy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-spring</artifactId>
                <version>${jboss.resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-jettison-provider</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
                <!--                必须显示依赖，jackson-databind里有不会被依赖到-->
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-parameter-names</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${apache.kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.commons.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${apache.commons.collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>0.10</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator-annotation-processor</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>

            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${dropwizard.metrics.version}</version>
            </dependency>

            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-annotation</artifactId>
                <version>${dropwizard.metrics.version}</version>
            </dependency>

            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jvm</artifactId>
                <version>${dropwizard.metrics.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis.spring.version}</version>
            </dependency>

            <dependency>
                <groupId>io.reactivex.rxjava2</groupId>
                <artifactId>rxjava</artifactId>
                <version>2.0.5</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.hengyunabc.xdiamond</groupId>
                <artifactId>xdiamond-client</artifactId>
                <version>1.0.4</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-client</artifactId>
                <version>1.0.0</version>
                <exclusions>
                    <exclusion>
                        <artifactId>guava</artifactId>
                        <groupId>com.google.guava</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>


            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-runtime</artifactId>
                <version>${protostuff.version}</version>
            </dependency>

            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-core</artifactId>
                <version>${protostuff.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>4.2.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>4.2.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>3.4.8</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>1.10.2</version>
            </dependency>

            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-client</artifactId>
                <version>4.1.0-incubating</version>
            </dependency>

            <dependency>
                <groupId>com.mashape.unirest</groupId>
                <artifactId>unirest-java</artifactId>
                <version>1.4.9</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>de.ruedigermoeller</groupId>
                <artifactId>fst</artifactId>
                <version>${fst.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-crypto</artifactId>
                <version>3.0.19.Final</version>
            </dependency>

            <dependency>
                <groupId>org.msgpack</groupId>
                <artifactId>msgpack</artifactId>
                <version>0.6.12</version>
            </dependency>

            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>5.0.4</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.5</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>3.5.3</version>
            </dependency>

            <dependency>
                <groupId>com.esotericsoftware.kryo</groupId>
                <artifactId>kryo</artifactId>
                <!--<version>4.0.0</version>-->
                <version>2.24.0</version>
            </dependency>

            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>3.3.6</version>
            </dependency>

            <dependency>
                <groupId>com.syyx.tpf</groupId>
                <artifactId>tpf-frame-assembly-descriptor</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.syyx.tpf</groupId>
                <artifactId>tpf-frame-assembly-script</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.syyx.tpf</groupId>
                <artifactId>tpf-frame-base</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.syyx.tpf</groupId>
                <artifactId>tpf-frame-config</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.syyx.tpf</groupId>
                <artifactId>tpf-frame-dubbo</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.syyx.tpf</groupId>
                <artifactId>tpf-frame-exception</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.syyx.tpf</groupId>
                <artifactId>tpf-frame-grpc</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.syyx.tpf</groupId>
                <artifactId>tpf-frame-influxdb</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.jetlang</groupId>
                <artifactId>jetlang</artifactId>
                <version>${jetlang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>

            <dependency>
                <groupId>io.lettuce</groupId>
                <artifactId>lettuce-core</artifactId>
                <version>${lettuce.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.skywalking</groupId>
                <artifactId>apm-toolkit-log4j-2.x</artifactId>
                <version>${skywalking.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.skywalking</groupId>
                <artifactId>apm-toolkit-trace</artifactId>
                <version>${skywalking.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.skywalking</groupId>
                <artifactId>apm-toolkit-opentracing</artifactId>
                <version>${skywalking.version}</version>
            </dependency>


            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-bom</artifactId>
                <version>2020.0.10</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!--      批量修改版本号插件  mvn versions:set -DnewVersion=1.2.0-SNAPSHOT  -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>
            <!--      maven-source-plugin的jar-no-fork目标绑定到default生命周期的package阶段，这样，以后在执行mvn package命令打包项目时，在package阶段之后会执行源代码打包 -->
            <plugin>
                <!--引入source插件 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <!-- 绑定source插件到Maven的生命周期并在生命周期后执行绑定的source的goal -->
                <executions>
                    <execution>
                        <!-- 绑定source插件到Maven的生命周期-->
                        <phase>compile</phase>
                        <!--在生命周期后执行绑定的source插件的goals -->
                        <goals>
                            <goal>jar-no-fork</goal>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--            这个插件的作用是，生成一个压缩版的pom.xml文件，然后在install和deploy阶段使用压缩后的pom.xml文件，替换原来的pom.xml文件-->
            <!--            和构建有关的元素会被删除；-->
            <!--            和开发有关的元素默认会被删除；-->
            <!--            只包含构件的使用者必须的一些信息；-->
            <!--            变量会被解析；-->
            <!--            上级关系会被解析，然后被压缩删除；-->
            <!--            构建时实际使用的profile会被评估，视情况处理；-->
            <!--            由JDK或者OS驱动的profile会被保留，需要时可以动态地控制依赖。-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!--            这个插件会生成一个META-INF/maven/plugin.xml文件，这个文件会被maven识别为一个插件，然后就可以在pom.xml文件中使用这个插件了-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-plugin-plugin</artifactId>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>3.6.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>1.2.5</version>
                </plugin>
                <plugin>
                    <!--引入source插件 -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <distributionManagement>
        <!--        推送镜像配置   -->
        <repository>
            <id>releases</id>
            <url>http://10.100.2.94:8081/repository/releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <url>http://10.100.2.94:8081/repository/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>